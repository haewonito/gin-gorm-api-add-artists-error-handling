{
	"info": {
		"_postman_id": "e937dc2d-b798-40c2-ac79-7d61993274d8",
		"name": "Go Gin Gorm Postgres",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18526065"
	},
	"item": [
		{
			"name": "Seed Data",
			"item": [
				{
					"name": "create 5 songs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const url_post = pm.variables.get(\"base_url\") + \"/songs\";",
									"var num = 2;",
									"const album_id = pm.variables.get(\"album_id\");",
									"",
									"for (let i = 0; i < 4; i++) {",
									"    var preRequest = {",
									"        method: 'POST',",
									"        url: `${url_post}`,",
									"        header: 'Content-Type: application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                title:`seed song title ${num}`,",
									"                album_id: album_id",
									"            })",
									"        }",
									"    };",
									"",
									"    pm.sendRequest(preRequest, (err, response) => {",
									"        if (err) {",
									"            console.error('Error:', err);",
									"        } else {",
									"            console.log('Pre-request script response:', response.json());",
									"        }",
									"    });",
									"        num += 1;",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"seed song title 1\",\n    \"album_id\": {{album_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/songs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"songs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create 3 albums",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const url_post = pm.variables.get(\"base_url\") + \"/albums\";",
									"var num = 2;",
									"var price_post = 10;",
									"",
									"for (let i = 0; i < 2; i++) {",
									"    var preRequest = {",
									"        method: 'POST',",
									"        url: `${url_post}`,",
									"        header: 'Content-Type: application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                title:`seed album title ${num}`,",
									"                artist: `seed album artist ${num}`,",
									"                price: price_post",
									"            })",
									"        }",
									"    };",
									"",
									"    pm.sendRequest(preRequest, (err, response) => {",
									"        if (err) {",
									"            console.error('Error:', err);",
									"        } else {",
									"            console.log('Pre-request script response:', response.json());",
									"        }",
									"    });",
									"        num += 1;",
									"        price_post += 10;",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let id = pm.response.json()[\"ID\"];",
									"",
									"pm.collectionVariables.set(\"album_id\", id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"seed album title 1\",\n    \"artist\": \"seed album artist 1\",\n    \"price\": 1.99\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/albums",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Albums",
			"item": [
				{
					"name": "get albums",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test('Has data', function() {",
									"  pm.expect(jsonData).not.be.empty;",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/albums",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "create album",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var timeNow = new Date().toISOString;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test('Has CreatedAt', function() {",
									"  pm.expect(jsonData).to.have.property(\"CreatedAt\").and.not.equal(null)",
									"});",
									"",
									"pm.test('Has ID', function() {",
									"  pm.expect(jsonData).to.have.property(\"CreatedAt\").and.not.equal(null);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"album 1\",\n    \"artist\": \"artist 1\",\n    \"price\": 19.99\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/albums",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums"
							]
						}
					},
					"response": []
				},
				{
					"name": "get album by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test('Has data for orders', function() {",
									"  pm.expect(jsonData).to.have.key('orders');",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/albums/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get album by id - bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test('Has data for orders', function() {",
									"  pm.expect(jsonData).to.have.key('orders');",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/albums/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete album",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My Product 3\",\n    \"listing_type\": \"ami\",\n    \"price\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/albums/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update album",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"album 1 - patched second time\",\n    \"artist\": \"artist 1\",\n    \"price\": 99.99\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/albums/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Songs",
			"item": [
				{
					"name": "get songs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test('Has data for products', function() {",
									"  pm.expect(jsonData).to.have.key('products');",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/songs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"songs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create song",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var timeNow = new Date().toISOString;"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Song 3\",\n    \"album_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/songs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"songs"
							]
						}
					},
					"response": []
				},
				{
					"name": "get song by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test('Has data for orders', function() {",
									"  pm.expect(jsonData).to.have.key('orders');",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/songs/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"songs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "patch product",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Song 2 patched\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/songs/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"songs",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete song",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My Product 3\",\n    \"listing_type\": \"ami\",\n    \"price\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/songs/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"songs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "other endpoints",
			"item": [
				{
					"name": "get songs by album id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/albums/:id/songs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"albums",
								":id",
								"songs"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get orders by productId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/1/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "create product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My Product 5\",\n    \"listing_type\": \"ami\",\n    \"price\": 1000,\n    \"vendor_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete product",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My Product 3\",\n    \"listing_type\": \"ami\",\n    \"price\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}